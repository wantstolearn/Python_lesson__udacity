# Define a function, hash_string,
# that takes as inputs a keyword
# (string) and a number of buckets,
# and returns a number representing
# the bucket for that keyword.

def hash_string(keyword,buckets):
    
    n= len(keyword)

    x=0
    b=0
    while x < n: # keyword could be a or ad or adf ....
        storeit = keyword[x] 
        z = ord(storeit)
        b = b+z
        out = b % buckets
        x=x+1
    
    return out

print hash_string('a',12)
#>>> 1

print hash_string('b',12)
#>>> 2

print hash_string('a',13)
#>>> 6

print hash_string('au',12)
#>>> 10

print hash_string('udacity',12)
#>>> 11
########################################## cleaner code version ###########################

def hash_string(keyword,buckets):
    
    n= len(keyword)

    x=0
    z=0
    while x < n:
        storeit = keyword[x]
        z = (z + ord(storeit))%buckets
        x=x+1
    return z
    
    ############################## and best version ###############
    def hash_string(keyword, buckets):

    h = 0
    for c in keyword:
        h= (h+ord(c))%buckets
    return h
